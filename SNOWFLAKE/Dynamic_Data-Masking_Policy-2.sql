USE DATABASE VM_DATABASE;

USE SCHEMA VM_SCHEMA;


create or replace table customers(
  id number,
  full_name varchar, 
  email varchar,
  phone varchar,
  spent number,
  create_date DATE DEFAULT CURRENT_DATE);

-- insert values in table --

insert into customers (id, full_name, email,phone,spent)
values
  (1,'Lewiss MacDwyer','lmacdwyer0@un.org','262-665-9168',140),
  (2,'Ty Pettingall','tpettingall1@mayoclinic.com','734-987-7120',254),
  (3,'Marlee Spadazzi','mspadazzi2@txnews.com','867-946-3659',120),
  (4,'Heywood Tearney','htearney3@patch.com','563-853-8192',1230),
  (5,'Odilia Seti','oseti4@globo.com','730-451-8637',143),
  (6,'Meggie Washtell','mwashtell5@rediff.com','568-896-6138',600);


  SELECT * FROM VM_DATABASE.VM_SCHEMA.CUSTOMERS;


-- set up roles
CREATE OR REPLACE ROLE VAIBHAV_TST_MASKED;
CREATE OR REPLACE ROLE ANAND_FULL_ACCESS;


GRANT USAGE ON DATABASE VM_DATABASE TO ROLE VAIBHAV_TST_MASKED;
GRANT ALL ON SCHEMA VM_DATABASE.VM_SCHEMA TO ROLE VAIBHAV_TST_MASKED;
GRANT SELECT, INSERT, UPDATE ON ALL TABLES IN SCHEMA VM_DATABASE.VM_SCHEMA TO ROLE VAIBHAV_TST_MASKED;
GRANT USAGE ON WAREHOUSE COMPUTE_WH TO ROLE VAIBHAV_TST_MASKED;


GRANT USAGE ON DATABASE VM_DATABASE TO ROLE ANAND_FULL_ACCESS;
GRANT ALL ON SCHEMA VM_DATABASE.VM_SCHEMA TO ROLE ANAND_FULL_ACCESS;
GRANT SELECT, INSERT, UPDATE ON ALL TABLES IN SCHEMA VM_DATABASE.VM_SCHEMA TO ROLE ANAND_FULL_ACCESS;
GRANT USAGE ON WAREHOUSE COMPUTE_WH TO ROLE ANAND_FULL_ACCESS;


-- Set up masking policy

--1ST POLICY--

CREATE OR REPLACE MASKING POLICY phone
 AS (phone VARCHAR) RETURNS VARCHAR ->
     
     CASE 
     WHEN CURRENT_ROLE() IN ('ANAND_FULL_ACCESS','ACCOUNTADMIN') THEN phone
     ELSE '##-###-##'
     END;
 


-- Apply policy on a specific column 

ALTER TABLE IF EXISTS CUSTOMERS MODIFY COLUMN phone 
SET MASKING POLICY phone;


-- Validating policies

USE ROLE ACCOUNTADMIN;
SELECT * FROM VM_DATABASE.VM_SCHEMA.CUSTOMERS;


USE ROLE ANAND_FULL_ACCESS;
SELECT * FROM VM_DATABASE.VM_SCHEMA.CUSTOMERS;

USE ROLE VAIBHAV_TST_MASKED;
SELECT * FROM VM_DATABASE.VM_SCHEMA.CUSTOMERS;


--2nd POLICY--

CREATE OR REPLACE MASKING POLICY emails
  AS (email VARCHAR) RETURNS VARCHAR ->
      CASE
       WHEN CURRENT_ROLE() IN ('ANAND_FULL_ACCESS','ACCOUNTADMIN') THEN email
       WHEN CURRENT_ROLE() IN('VAIBHAV_TST_MASKED') THEN REGEXP_REPLACE(email,'.+\@','******@')
       ELSE '*********'
       END;


-- Apply policy on a specific column 

ALTER TABLE IF EXISTS CUSTOMERS MODIFY COLUMN email 
SET MASKING POLICY emails;


-- Validating policies

USE ROLE ACCOUNTADMIN;
SELECT * FROM VM_DATABASE.VM_SCHEMA.CUSTOMERS;


USE ROLE ANAND_FULL_ACCESS;
SELECT * FROM VM_DATABASE.VM_SCHEMA.CUSTOMERS;

USE ROLE VAIBHAV_TST_MASKED;
SELECT * FROM VM_DATABASE.VM_SCHEMA.CUSTOMERS;          


--3rd POLICY--

CREATE OR REPLACE MASKING POLICY FULL_NAME
  AS (full_name VARCHAR) RETURNS VARCHAR ->
      CASE
       WHEN CURRENT_ROLE() IN ('ANAND_FULL_ACCESS','ACCOUNTADMIN') THEN full_name
       WHEN CURRENT_ROLE() IN ('VAIBHAV_TST_MASKED') THEN LEFT(full_name, 3) || '*******'
       ELSE '*********'
       END;


ALTER TABLE IF EXISTS CUSTOMERS MODIFY COLUMN full_name 
SET MASKING POLICY FULL_NAME;


-- Validating policies

USE ROLE ACCOUNTADMIN;
SELECT * FROM VM_DATABASE.VM_SCHEMA.CUSTOMERS;


USE ROLE ANAND_FULL_ACCESS;
SELECT * FROM VM_DATABASE.VM_SCHEMA.CUSTOMERS;

USE ROLE VAIBHAV_TST_MASKED;
SELECT * FROM VM_DATABASE.VM_SCHEMA.CUSTOMERS; 


-- Remove policy before replacing/dropping 


ALTER TABLE IF EXISTS CUSTOMERS MODIFY COLUMN email
UNSET MASKING POLICY;

ALTER TABLE IF EXISTS CUSTOMERS MODIFY COLUMN phone
UNSET MASKING POLICY;

ALTER TABLE IF EXISTS CUSTOMERS MODIFY COLUMN full_name
UNSET MASKING POLICY;